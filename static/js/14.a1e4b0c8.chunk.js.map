{"version":3,"sources":["components/Widgets/Statistic/Notification.js","views/maps/google-maps/MarkerClusterer.js","views/maps/google-maps/InfoBox.js","views/maps/google-maps/Marker.js","views/maps/google-maps/StreetViewPanorma.js","views/maps/GoogleMaps.js"],"names":["Notification","props","Fragment","variant","message","Link","href","link","target","className","MarkerClusterer","compose","withProps","googleMapURL","loadingElement","style","height","containerElement","mapElement","center","lat","lng","withStateHandlers","isOpen","onToggleOpen","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","defaultOptions","styles","fancyMapStyles","defaultPosition","google","maps","LatLng","options","closeBoxURL","enableEventPropagation","backgroundColor","opacity","padding","fontSize","fontColor","position","onClick","onCloseClick","require","MapWithAMarker","withHandlers","onMarkerClustererClick","markerClusterer","clickedMarkers","getMarkers","console","log","length","averageCenter","enableRetinaIcons","gridSize","markers","map","marker","latitude","longitude","photo_id","GoogleMap","StreetViewPanorama","OverlayView","getPixelPositionOffset","width","x","y","visible","mapPaneName","OVERLAY_LAYER","background","color","borderRadius","GoogleMaps","useState","setMarkers","useEffect","url","join","fetch","then","res","json","data","photos","Row","Col","sm","xl","Card","Header","Title","as","Body","Marker"],"mappings":"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","file":"static/js/14.a1e4b0c8.chunk.js","sourcesContent":["import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst Notification = (props) => {\n  return (\n    <React.Fragment>\n      <Alert variant=\"warning\">\n        {props.message}\n        <Alert.Link href={props.link} target=\"_blank\" className=\"float-right\">\n          Demo & Documentation\n        </Alert.Link>\n      </Alert>\n    </React.Fragment>\n  );\n};\n\nexport default Notification;\n","import { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nimport { compose, withProps, withHandlers } from 'recompose';\n\nconst { MarkerClusterer } = require('react-google-maps/lib/components/addons/MarkerClusterer');\n\nconst MapWithAMarkerClusterer = compose(\n  withProps({\n    googleMapURL:\n      'https://maps.googleapis.com/maps/api/js?key=AIzaSyAChufWiMfwsmyX3Se1dRaN4t31z0xmIMo&v=3.exp&libraries=geometry,drawing,places',\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />,\n    mapElement: <div style={{ height: `100%` }} />\n  }),\n  withHandlers({\n    onMarkerClustererClick: () => (markerClusterer) => {\n      const clickedMarkers = markerClusterer.getMarkers();\n      console.log(`Current clicked markers length: ${clickedMarkers.length}`);\n      console.log(clickedMarkers);\n    }\n  }),\n  withScriptjs,\n  withGoogleMap\n)((props) => (\n  <GoogleMap defaultZoom={3} defaultCenter={{ lat: 25.0391667, lng: 121.525 }}>\n    <MarkerClusterer onClick={props.onMarkerClustererClick} averageCenter enableRetinaIcons gridSize={60}>\n      {props.markers.map((marker) => (\n        <Marker key={marker.photo_id} position={{ lat: marker.latitude, lng: marker.longitude }} />\n      ))}\n    </MarkerClusterer>\n  </GoogleMap>\n));\n\nexport default MapWithAMarkerClusterer;\n","/*global google*/\n\nimport InfoBox from 'react-google-maps/lib/components/addons/InfoBox';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nimport { compose, withProps, withStateHandlers } from 'recompose';\nimport fancyMapStyles from './fancy-map-styles.json';\n\nconst StyledMapWithAnInfoBox = compose(\n  withProps({\n    googleMapURL:\n      'https://maps.googleapis.com/maps/api/js?key=AIzaSyAChufWiMfwsmyX3Se1dRaN4t31z0xmIMo&v=3.exp&libraries=geometry,drawing,places',\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />,\n    mapElement: <div style={{ height: `100%` }} />,\n    center: { lat: 28.5274851, lng: 77.1389452 }\n  }),\n  withStateHandlers(\n    () => ({\n      isOpen: false\n    }),\n    {\n      onToggleOpen:\n        ({ isOpen }) =>\n        () => ({\n          isOpen: !isOpen\n        })\n    }\n  ),\n  withScriptjs,\n  withGoogleMap\n)((props) => (\n  <GoogleMap defaultZoom={5} defaultCenter={props.center} defaultOptions={{ styles: fancyMapStyles }}>\n    <InfoBox\n      defaultPosition={new google.maps.LatLng(props.center.lat, props.center.lng)}\n      options={{ closeBoxURL: ``, enableEventPropagation: true }}\n    >\n      <div style={{ backgroundColor: `yellow`, opacity: 0.75, padding: `12px` }}>\n        <div style={{ fontSize: `16px`, fontColor: `#08233B` }}>Hello, India!</div>\n      </div>\n    </InfoBox>\n    <Marker position={{ lat: 23.0204978, lng: 72.4396583 }} onClick={props.onToggleOpen}>\n      {props.isOpen && (\n        <InfoBox onCloseClick={props.onToggleOpen} options={{ closeBoxURL: ``, enableEventPropagation: true }}>\n          <div style={{ backgroundColor: `yellow`, opacity: 0.75, padding: `12px` }}>\n            <div style={{ fontSize: `16px`, fontColor: `#08233B` }}>Hello, Gujarat!</div>\n          </div>\n        </InfoBox>\n      )}\n    </Marker>\n  </GoogleMap>\n));\n\nexport default StyledMapWithAnInfoBox;\n","import { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nimport { compose } from 'recompose';\n\nconst MapWithAMarker = compose(\n  withScriptjs,\n  withGoogleMap\n)((props) => (\n  <GoogleMap defaultZoom={8} defaultCenter={{ lat: 28.5274851, lng: 77.1389452 }}>\n    <Marker position={{ lat: 28.5274851, lng: 77.1389452 }} />\n  </GoogleMap>\n));\n\nexport default MapWithAMarker;\n","const { compose, withProps } = require('recompose');\n\nconst { withScriptjs, withGoogleMap, GoogleMap, StreetViewPanorama, OverlayView } = require('react-google-maps');\n\nconst getPixelPositionOffset = (width, height) => ({\n  x: -(width / 2),\n  y: -(height / 2)\n});\n\nconst StreetViewPanormaWithAnOverlayView = compose(\n  withProps({\n    googleMapURL:\n      'https://maps.googleapis.com/maps/api/js?key=AIzaSyAChufWiMfwsmyX3Se1dRaN4t31z0xmIMo&v=3.exp&libraries=geometry,drawing,places',\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />,\n    mapElement: <div style={{ height: `100%` }} />,\n    center: { lat: 49.2853171, lng: -123.1119202 }\n  }),\n  withScriptjs,\n  withGoogleMap\n)((props) => (\n  <GoogleMap defaultZoom={8} defaultCenter={props.center}>\n    <StreetViewPanorama defaultPosition={props.center} visible>\n      <OverlayView\n        position={{ lat: 49.28590291211115, lng: -123.11248166065218 }}\n        mapPaneName={OverlayView.OVERLAY_LAYER}\n        getPixelPositionOffset={getPixelPositionOffset}\n      >\n        <div style={{ background: `red`, color: `white`, padding: 5, borderRadius: `50%` }}>OverlayView</div>\n      </OverlayView>\n    </StreetViewPanorama>\n  </GoogleMap>\n));\n\nexport default StreetViewPanormaWithAnOverlayView;\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport InfoBox from './google-maps/InfoBox';\nimport MarkerClusterer from './google-maps/MarkerClusterer';\nimport Marker from './google-maps/Marker';\nimport StreetViewPanorma from './google-maps/StreetViewPanorma';\nimport ModuleNotification from '../../components/Widgets/Statistic/Notification';\n\nimport fetch from 'isomorphic-fetch';\n\nconst GoogleMaps = () => {\n  const [markers, setMarkers] = useState([]);\n\n  useEffect(() => {\n    const url = [\n      // Length issue\n      `https://gist.githubusercontent.com`,\n      `/farrrr/dfda7dd7fccfec5474d3`,\n      `/raw/758852bbc1979f6c4522ab4e92d1c92cba8fb0dc/data.json`\n    ].join('');\n\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        setMarkers(data.photos);\n      });\n\n    return () => {\n      setMarkers([]);\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Row>\n        <Col sm={12}>\n          <ModuleNotification\n            message=\"For more info please check the components's official documentation\"\n            link=\"https://www.npmjs.com/package/react-google-maps\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col xl={6}>\n          <Card>\n            <Card.Header>\n              <Card.Title as=\"h5\">Default Marker</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <Marker\n                googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAChufWiMfwsmyX3Se1dRaN4t31z0xmIMo&v=3.exp&libraries=geometry,drawing,places\"\n                loadingElement={<div style={{ height: `100%` }} />}\n                containerElement={<div style={{ height: `400px` }} />}\n                mapElement={<div style={{ height: `100%` }} />}\n              />\n            </Card.Body>\n          </Card>\n        </Col>\n        {/* <Col xl={6}>\n          <Card>\n            <Card.Header>\n              <Card.Title as=\"h5\">Infobox</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <InfoBox />\n            </Card.Body>\n          </Card>\n        </Col> */}\n        {/* <Col xl={6}>\n          <Card>\n            <Card.Header>\n              <Card.Title as=\"h5\">Marker Clusterer</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <MarkerClusterer markers={markers} />\n            </Card.Body>\n          </Card>\n        </Col> */}\n        {/* <Col xl={6}>\n          <Card>\n            <Card.Header>\n              <Card.Title as=\"h5\">Street View Panorma</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <StreetViewPanorma />\n            </Card.Body>\n          </Card>\n        </Col> */}\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default GoogleMaps;\n"],"sourceRoot":""}